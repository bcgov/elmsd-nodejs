---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
    label: "${NAME}-deploy-template"
    name: "${NAME}-deploy-template"
objects:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
          name: "${NAME}-backup"
          labels:
              name: "${NAME}"
              component: "database-backup"
      spec:
          storageClassName: ${BACKUP_VOLUME_CLASS}
          accessModes:
              - ReadWriteOnce
          resources:
              requests:
                  storage: "${BACKUP_VOLUME_SIZE}"
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
          name: "${NAME}-backup-verification"
          labels:
              name: "${NAME}"
              component: "database-backup"
      spec:
          storageClassName: ${VERIFICATION_VOLUME_CLASS}
          accessModes:
              - ReadWriteOnce
          resources:
              requests:
                  storage: "${VERIFICATION_VOLUME_SIZE}"
    - kind: Secret
      apiVersion: v1
      metadata:
          name: "${NAME}-webhook"
          labels:
              name: "${NAME}"
              component: "database-backup"
      type: Opaque
      stringData:
          webhook-url: "${WEBHOOK_URL}"

    - kind: DeploymentConfig
      apiVersion: v1
      metadata:
          name: "${NAME}"
          labels:
              name: "${NAME}"
              component: "database-backup"
          annotations:
              description: Defines how to deploy the ${NAME} server
      spec:
          strategy:
              type: Recreate
          triggers:
              - type: ConfigChange
              - type: ImageChange
                imageChangeParams:
                    automatic: true
                    containerNames:
                        - "${NAME}"
                    from:
                        kind: ImageStreamTag
                        namespace: "${IMAGE_NAMESPACE}"
                        name: "${NAME}:${TAG_NAME}"
          replicas: 1
          selector:
              name: "${NAME}"
          template:
              metadata:
                  name: "${NAME}"
                  labels:
                      name: "${NAME}"
                      component: "database-backup"
              spec:
                  volumes:
                      - name: "${NAME}-backup"
                        persistentVoumeClaim:
                            claimName: "${NAME}-backup"
                      - name: "${NAME}-backup-verification"
                        persistentVoumeClaim:
                            claimName: "${NAME}-backup-verification"
                      - name: "${NAME}-config"
                        configMap:
                            name: "${NAME}"
                            items:
                                - key: "${CONFIG_FILE_NAME}"
                                  path: "${CONFIG_FILE_NAME}"
                  containers:
                      - name: "${NAME}"
                        env:
                            - name: NAME
                              value: "${NAME}"
                            - name: BACKUP_STRATEGY
                              value: "${BACKUP_STRATEGY}"
                            - name: BACKUP_DIR
                              value: "${BACKUP_DIR}"
                            - name: NUM_BACKUPS
                              value: "${NUM_BACKUPS}"
                            - name: DAILY_BACKUPS
                              value: "${DAILY_BACKUPS}"
                            - name: WEEKLY_BACKUPS
                              value: "${WEEKLY_BACKUPS}"
                            - name: MONTHLY_BACKUPS
                              value: "${MONTHLY_BACKUPS}"
                            - name: BACKUP_PERIOD
                              value: "${BACKUP_PERIOD}"
                            - name: MONGODB_AUTHENTICATION_DATABASE
                              value: "${MONGODB_AUTHENTICATION_DATABASE}"
                            - name: TABLE_SCHEMA
                              value: "${TABLE_SCHEMA}"
                            - name: DATABASE_USER
                              valueFrom:
                                  secretKeyRef:
                                      name: "${DATABASE_CREDENTIALS_SECRET}"
                                      key: "${DATABASE_CREDENTIALS_USER_KEY}"
                            - name: DATABASE_PASSWORD
                              valueFrom:
                                  secretKeyRef:
                                      name: "${DATABASE_CREDENTIALS_SECRET}"
                                      key: "${DATABASE_CREDENTIALS_PASSWORD_KEY}"
                            - name: WEBHOOK_URL
                              valueFrom:
                                  secretKeyRef:
                                      name: "${NAME}-webhook"
                                      key: webhook-url
                            - name: ENVIRONMENT_FRIENDLY_NAME
                              value: "${ENVIRONMENT_FRIENDLY_NAME}"
                            - name: ENVIRONMENT_NAME
                              value: "${ENVIRONMENT_NAME}"
                        resources:
                            requests:
                                cpu: "${CPU_REQUEST}"
                                memory: "${MEMORY_REQUEST}"
                            limits:
                                cpu: "${CPU_LIMIT}"
                                memory: "${MEMORY_LIMIT}"
                        volumeMounts:
                            - name: "${NAME}-backup"
                              mountPath: "${BACKUP_DIR}"
                            - name: "${NAME}-backup-verification"
                              mountPath: "${VERIFICATION_VOLUME_MOUNT_PATH}"
                            - name: "${NAME}-config"
                              mountPath: "${CONFIG_MOUNT_PATH}${CONFIG_FILE_NAME}"
                              subPath: "${CONFIG_FILE_NAME}"

parameters:
    - name: NAME
      displayName: Name
      description: The name assigned to all of the resources.
      required: true

    - name: CONFIG_FILE_NAME
      displayName: Config File Name
      description: The name of the configuration file.
      required: true
      value: backup.conf

    - name: CONFIG_MOUNT_PATH
      displayName: Config Mount Path
      description: The path to use to mount the config file.
      required: true
      value: "/"

    - name: BACKUP_VOLUME_CLASS
      displayName: Backup Volume Class
      description: The class of the persistent volume used to store the backups.  Use one of
          'netapp-file-backup' or 'netapp-file-standard'
      required: true
      value: netapp-file-backup

    - name: BACKUP_VOLUME_SIZE
      displayName: Backup Volume Size
      description: The size of the persistent volume used to store the backups, e.g. 512Mi,
          1Gi, 2Gi.  Ensure this is sized correctly.  Refer to the container documentation
          for details.
      required: true
      value: 2Gi

    - name: VERIFICATION_VOLUME_CLASS
      displayName: Backup Volume Class
      description: The class of the persistent volume used for restoring and verifying
          backups.  Use one of 'netapp-file-standard' or 'netapp-block-standard'.
      required: true
      value: netapp-file-standard

    - name: VERIFICATION_VOLUME_SIZE
      displayName: Backup Volume Size
      description: The size of the persistent volume used for restoring and verifying
          backups, e.g. 512Mi, 1Gi, 2Gi.  Ensure this is sized correctly.  It should be
          large enough to contain your largest database.
      required: true
      value: 2Gi

    - name: VERIFICATION_VOLUME_MOUNT_PATH
      displayName: Verification Volume Mount Path
      description: The path on which to mount the verification volume.  This is used by
          the database server to contain the database configuration and data files. For
          Mongo, please use /var/lib/mongodb/data.
      required: true
      value: /var/lib/pgsql/data

    - name: IMAGE_NAMESPACE
      displayName: Image Namespace
      description: The namespace of the OpenShift project containing the ImageStream for
          the application.
      required: true

    - name: TAG_NAME
      displayName: Environment TAG name
      description: The TAG name for this environment, e.g., dev, test, prod
      required: true

    - name: BACKUP_STRATEGY
      displayName: Backup Strategy
      description: The strategy to use for backups -- for example daily, or rolling.
      required: true
      value: rolling

    - name: BACKUP_DIR
      displayName: The root backup directory
      description: The name of the root backup directory.  The backup volume will be mounted
          to this directory.
      required: true
      value: "/backups/"

    - name: NUM_BACKUPS
      displayName: The number of backup files to be retained
      description: Used for backward compatibility only.  Ignored when using the recommended
          `rolling` backup strategy.  The number of backup files to be retained.  Used for
          the `daily` backup strategy.
      required: false

    - name: DAILY_BACKUPS
      displayName: Number of Daily Backups to Retain
      description: The number of daily backup files to be retained.  Used for the `rolling`
          backup strategy.
      required: false
      value: "7"

    - name: WEEKLY_BACKUPS
      displayName: Number of Weekly Backups to Retain
      description: The number of weekly backup files to be retained.  Used for the `rolling`
          backup strategy.
      required: false
      value: "4"

    - name: MONTHLY_BACKUPS
      displayName: Number of Monthly Backups to Retain
      description: The number of monthly backup files to be retained.  Used for the `rolling`
          backup strategy.
      required: false
      value: "1"

    - name: BACKUP_PERIOD
      displayName: Period (d,m,s) between backups in a format used by the sleep command
      description: Used for backward compatibility only.  Ignored when using the recommended
          `backup.conf` and cron backup strategy.  Period (d,m,s) between backups in a format
          used by the sleep command
      required: false

    - name: MONGODB_AUTHENTICATION_DATABASE
      displayName: MongoDB Authentication Database
      description: This is only required if you are backing up mongo database with a separate
          authentication database.
      required: false
      value: ""

    - name: TABLE_SCHEMA
      displayName: Table Schema
      description: The table schema for your database.  Used for Postgres backups.
      required: true
      value: public

    - name: DATABASE_CREDENTIALS_SECRET
      displayName: Database Credentials Secret
      description: The name associated to the secret which holds the database credentials.
      required: true

    - name: DATABASE_CREDENTIALS_USER_KEY
      displayName: Database User Key Name
      description: The database user key name stored in database deployment resources specified by DATABASE_DEPLOYMENT_NAME.
      required: true

    - name: DATABASE_CREDENTIALS_PASSWORD_KEY
      displayName: Database Password Key Name
      description: The database password key name stored in database deployment resources specified by DATABASE_DEPLOYMENT_NAME.
      required: true

    - name: WEBHOOK_URL
      displayName: Webhook URL
      description: The URL of the webhook to use for notifications.  If not specified,
          the webhook integration feature is disabled.
      required: false

    - name: ENVIRONMENT_FRIENDLY_NAME
      displayName: Friendly Environment Name
      description: The human readable name of the environment.  This variable is used by the webhook integration to identify the environment in which the backup notifications originate.
      required: false

    - name: ENVIRONMENT_NAME
      displayName: Environment Name (Environment Id)
      description: The name or Id of the environment.  This variable is used by the webhook integration and by the NetworkSecurityPolicies to identify the environment in which the backup notifications originate.
      required: false

    - name: CPU_REQUEST
      displayName: Resources CPU Request
      description: The resources CPU request (in cores) for this build.
      required: true
      value: "0"

    - name: CPU_LIMIT
      displayName: Resources CPU Limit
      description: The resources CPU limit (in cores) for this build.
      required: true
      value: "0"

    - name: MEMORY_REQUEST
      displayName: Resources Memory Request
      description: The resources Memory request (in Mi, Gi, etc) for this build.
      required: true
      value: 0Mi

    - name: MEMORY_LIMIT
      displayName: Resources Memory Limit
      description: The resources Memory limit (in Mi, Gi, etc) for this build.
      required: true
      value: 0Mi
